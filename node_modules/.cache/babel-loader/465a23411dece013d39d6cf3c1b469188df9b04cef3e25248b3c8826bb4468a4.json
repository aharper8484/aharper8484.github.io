{"ast":null,"code":"var _jsxFileName = \"/Users/adamharper/Documents/GitHub/portfolio/src/components/CardNav.js\",\n  _s = $RefreshSig$();\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport { useState } from \"react\";\nimport remarkGfm from \"remark-gfm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardNav(props) {\n  _s();\n  const textContentBio = `bio display`;\n  const textContentSkills = `skills display`;\n  const textContentTimeline = ` timeline display`;\n  const textContentLinks = `skills display`;\n  const landingContent = `main landing page please`;\n\n  // need to create landingContent variable and content\n  const [mainContent, setMainContent] = useState(landingContent);\n  const [toggle, setToggle] = useState(false);\n  function displayMainContent(contentLink) {\n    if (toggle === false && props.title === \"# Bio\") {\n      setToggle(!toggle);\n      setMainContent(textContentBio);\n    } else if (toggle === false && props.title === \"# Skills\") {\n      setToggle(!toggle);\n      setMainContent(textContentSkills);\n    } else if (toggle === false && props.title === \"# Timeline\") {\n      setToggle(!toggle);\n      setMainContent(textContentTimeline);\n    } else if (toggle === false && props.title === \"# Links\") {\n      setToggle(!toggle);\n      setMainContent(textContentLinks);\n    } else {\n      setMainContent(props.title);\n      setToggle(!toggle);\n      console.log(mainContent);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.title,\n    onClick: () => displayMainContent(props.title),\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: mainContent,\n      remarkPlugins: [remarkGfm],\n      class: \"mainNavIconText\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(CardNav, \"l7mtUY1WTnIYiGTzTXWInHvDJKQ=\");\n_c = CardNav;\nexport default CardNav;\nvar _c;\n$RefreshReg$(_c, \"CardNav\");","map":{"version":3,"names":["ReactMarkdown","useState","remarkGfm","jsxDEV","_jsxDEV","CardNav","props","_s","textContentBio","textContentSkills","textContentTimeline","textContentLinks","landingContent","mainContent","setMainContent","toggle","setToggle","displayMainContent","contentLink","title","console","log","id","onClick","children","remarkPlugins","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adamharper/Documents/GitHub/portfolio/src/components/CardNav.js"],"sourcesContent":["import { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport { useState } from \"react\";\nimport remarkGfm from \"remark-gfm\";\n\nfunction CardNav(props) {\n  const textContentBio = `bio display`;\n  const textContentSkills = `skills display`;\n  const textContentTimeline = ` timeline display`;\n  const textContentLinks = `skills display`;\n  const landingContent = `main landing page please`;\n\n  // need to create landingContent variable and content\n  const [mainContent, setMainContent] = useState(landingContent);\n  const [toggle, setToggle] = useState(false);\n\n  function displayMainContent(contentLink) {\n    if (toggle === false && props.title === \"# Bio\") {\n      setToggle(!toggle);\n      setMainContent(textContentBio);\n    } else if (toggle === false && props.title === \"# Skills\") {\n      setToggle(!toggle);\n      setMainContent(textContentSkills);\n    } else if (toggle === false && props.title === \"# Timeline\") {\n      setToggle(!toggle);\n      setMainContent(textContentTimeline);\n    } else if (toggle === false && props.title === \"# Links\") {\n      setToggle(!toggle);\n      setMainContent(textContentLinks);\n    } else {\n      setMainContent(props.title);\n      setToggle(!toggle);\n      console.log(mainContent);\n    }\n  }\n\n  return (\n    <div id={props.title} onClick={() => displayMainContent(props.title)}>\n      {\n        // eslint-disable-next-line\n      }\n      <ReactMarkdown\n        children={mainContent}\n        remarkPlugins={[remarkGfm]}\n        class=\"mainNavIconText\"\n      />\n    </div>\n  );\n}\n\nexport default CardNav;\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,mCAAmC;AACjE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAMC,cAAc,GAAI,aAAY;EACpC,MAAMC,iBAAiB,GAAI,gBAAe;EAC1C,MAAMC,mBAAmB,GAAI,mBAAkB;EAC/C,MAAMC,gBAAgB,GAAI,gBAAe;EACzC,MAAMC,cAAc,GAAI,0BAAyB;;EAEjD;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAACW,cAAc,CAAC;EAC9D,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3C,SAASgB,kBAAkBA,CAACC,WAAW,EAAE;IACvC,IAAIH,MAAM,KAAK,KAAK,IAAIT,KAAK,CAACa,KAAK,KAAK,OAAO,EAAE;MAC/CH,SAAS,CAAC,CAACD,MAAM,CAAC;MAClBD,cAAc,CAACN,cAAc,CAAC;IAChC,CAAC,MAAM,IAAIO,MAAM,KAAK,KAAK,IAAIT,KAAK,CAACa,KAAK,KAAK,UAAU,EAAE;MACzDH,SAAS,CAAC,CAACD,MAAM,CAAC;MAClBD,cAAc,CAACL,iBAAiB,CAAC;IACnC,CAAC,MAAM,IAAIM,MAAM,KAAK,KAAK,IAAIT,KAAK,CAACa,KAAK,KAAK,YAAY,EAAE;MAC3DH,SAAS,CAAC,CAACD,MAAM,CAAC;MAClBD,cAAc,CAACJ,mBAAmB,CAAC;IACrC,CAAC,MAAM,IAAIK,MAAM,KAAK,KAAK,IAAIT,KAAK,CAACa,KAAK,KAAK,SAAS,EAAE;MACxDH,SAAS,CAAC,CAACD,MAAM,CAAC;MAClBD,cAAc,CAACH,gBAAgB,CAAC;IAClC,CAAC,MAAM;MACLG,cAAc,CAACR,KAAK,CAACa,KAAK,CAAC;MAC3BH,SAAS,CAAC,CAACD,MAAM,CAAC;MAClBK,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;IAC1B;EACF;EAEA,oBACET,OAAA;IAAKkB,EAAE,EAAEhB,KAAK,CAACa,KAAM;IAACI,OAAO,EAAEA,CAAA,KAAMN,kBAAkB,CAACX,KAAK,CAACa,KAAK,CAAE;IAAAK,QAAA,eAInEpB,OAAA,CAACJ,aAAa;MACZwB,QAAQ,EAAEX,WAAY;MACtBY,aAAa,EAAE,CAACvB,SAAS,CAAE;MAC3BwB,KAAK,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CA3CQF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA6ChB,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}