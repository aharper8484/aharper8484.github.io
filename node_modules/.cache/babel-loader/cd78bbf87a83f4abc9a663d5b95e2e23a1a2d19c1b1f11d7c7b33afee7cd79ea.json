{"ast":null,"code":"var _jsxFileName = \"/Users/adamharper/Documents/GitHub/portfolio/src/components/CardNav.js\",\n  _s = $RefreshSig$();\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport { useState } from \"react\";\nimport remarkGfm from \"remark-gfm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardNav(props) {\n  _s();\n  const titleCardClass = \" cardTitle\";\n  const textCardClass = \" cardText\";\n  const titleContent = `# ` + props.title;\n  const [mdContent, setMdContent] = useState(titleContent);\n  const [toggle, setToggle] = useState(false);\n  const [currentClass, setClass] = useState(titleCardClass);\n\n  //   const handleClick = (e) => {\n  //     e.preventDefault();\n  //     setToggle(!false);\n  //     displayContent();\n  //   };\n\n  // TODO - fix toggle\n  function displayContent(title) {\n    if (toggle === false && props.title === \"Bio\") {\n      setToggle(!toggle);\n      setClass(textCardClass);\n      setMdContent(textContentBio);\n    } else if (toggle === false && props.title === \"Skills\") {\n      setToggle(!toggle);\n      setClass(textCardClass);\n      setMdContent(textContentSkills);\n    } else if (toggle === false && props.title === \"Timeline\") {\n      setToggle(!toggle);\n      setClass(textCardClass);\n      setMdContent(textContentTimeline);\n    } else if (toggle === false && props.title === \"Links\") {\n      setToggle(!toggle);\n      setClass(textCardClass);\n      setMdContent(textContentLinks);\n    } else {\n      setMdContent(titleContent);\n      setToggle(!toggle);\n      setClass(titleCardClass);\n      console.log(mdContent);\n    }\n  }\n  if (props.contentType === \"text\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textCardContainer \" + currentClass,\n      id: props.title,\n      onClick: () => displayContent(props.title),\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: mdContent,\n        remarkPlugins: [remarkGfm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  } else if (props.contentType === \"image\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageCardContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"cardImage\",\n        src: props.image,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  } else if (props.contentType === \"linkage\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linkCardContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"linkCardGrid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"iconImage\",\n            src: props.githubIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"iconImage\",\n            src: props.linkedinIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"iconImage\",\n            src: props.resumeIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem linkText\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: \"**aharper8484@gmail.com**\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem linkText\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: \"**07980686594**\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem linkText\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: \"**Website Link**\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(CardNav, \"MVy2AsLJpwlJRSCz74mbsBgRnN4=\");\n_c = CardNav;\nexport default CardNav;\nvar _c;\n$RefreshReg$(_c, \"CardNav\");","map":{"version":3,"names":["ReactMarkdown","useState","remarkGfm","jsxDEV","_jsxDEV","CardNav","props","_s","titleCardClass","textCardClass","titleContent","title","mdContent","setMdContent","toggle","setToggle","currentClass","setClass","displayContent","textContentBio","textContentSkills","textContentTimeline","textContentLinks","console","log","contentType","className","id","onClick","children","remarkPlugins","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","githubIcon","linkedinIcon","resumeIcon","_c","$RefreshReg$"],"sources":["/Users/adamharper/Documents/GitHub/portfolio/src/components/CardNav.js"],"sourcesContent":["import { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport { useState } from \"react\";\nimport remarkGfm from \"remark-gfm\";\n\nfunction CardNav(props) {\n  const titleCardClass = \" cardTitle\";\n  const textCardClass = \" cardText\";\n  const titleContent = `# ` + props.title;\n\n  const [mdContent, setMdContent] = useState(titleContent);\n  const [toggle, setToggle] = useState(false);\n  const [currentClass, setClass] = useState(titleCardClass);\n\n  //   const handleClick = (e) => {\n  //     e.preventDefault();\n  //     setToggle(!false);\n  //     displayContent();\n  //   };\n\n  // TODO - fix toggle\n  function displayContent(title) {\n    if (toggle === false && props.title === \"Bio\") {\n      setToggle(!toggle);\n      setClass(textCardClass);\n      setMdContent(textContentBio);\n    } else if (toggle === false && props.title === \"Skills\") {\n      setToggle(!toggle);\n      setClass(textCardClass);\n      setMdContent(textContentSkills);\n    } else if (toggle === false && props.title === \"Timeline\") {\n      setToggle(!toggle);\n      setClass(textCardClass);\n      setMdContent(textContentTimeline);\n    } else if (toggle === false && props.title === \"Links\") {\n      setToggle(!toggle);\n      setClass(textCardClass);\n      setMdContent(textContentLinks);\n    } else {\n      setMdContent(titleContent);\n      setToggle(!toggle);\n      setClass(titleCardClass);\n      console.log(mdContent);\n    }\n  }\n\n  if (props.contentType === \"text\") {\n    return (\n      <div\n        className={\"textCardContainer \" + currentClass}\n        id={props.title}\n        onClick={() => displayContent(props.title)}\n      >\n        {\n          // eslint-disable-next-line\n        }\n        <ReactMarkdown children={mdContent} remarkPlugins={[remarkGfm]} />\n      </div>\n    );\n  } else if (props.contentType === \"image\") {\n    return (\n      <div className=\"imageCardContainer\">\n        <img className=\"cardImage\" src={props.image} alt=\"Profile\" />\n      </div>\n    );\n  } else if (props.contentType === \"linkage\") {\n    return (\n      <div className=\"linkCardContainer\">\n        <div className=\"linkCardGrid\">\n          <div className=\"linkCardItem\">\n            <img className=\"iconImage\" src={props.githubIcon} alt=\"\"></img>\n          </div>\n          <div className=\"linkCardItem\">\n            <img className=\"iconImage\" src={props.linkedinIcon} alt=\"\"></img>\n          </div>\n          <div className=\"linkCardItem\">\n            <img className=\"iconImage\" src={props.resumeIcon} alt=\"\"></img>\n          </div>\n          <div className=\"linkCardItem linkText\">\n            <ReactMarkdown>**aharper8484@gmail.com**</ReactMarkdown>\n          </div>\n          <div className=\"linkCardItem linkText\">\n            <ReactMarkdown>**07980686594**</ReactMarkdown>\n          </div>\n          <div className=\"linkCardItem linkText\">\n            <ReactMarkdown>**Website Link**</ReactMarkdown>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardNav;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}