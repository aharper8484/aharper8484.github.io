{"ast":null,"code":"var _jsxFileName = \"/Users/adamharper/Documents/GitHub/portfolio/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const titleContent = `# ` + props.title;\n  const textContent = `markdown content will go here`;\n  // const [mdContent, setMdContent] = useState(titleContent);\n  const [toggle, setToggle] = useState(false);\n\n  //   const handleClick = (e) => {\n  //     e.preventDefault();\n  //     setToggle(!false);\n  //     displayContent();\n  //   };\n\n  // const displayContent = (toggle) => {\n  //   if (toggle === false) {\n  //     setMdContent(textContent);\n  //     setToggle(toggle);\n  //   } else {\n  //     setMdContent(titleContent);\n  //     setToggle(!toggle);\n  //   }\n  // };\n\n  if (props.contentType === \"text\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textCardContainer cardTitle cardHidden\",\n      onClick: () => setToggle(!toggle),\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: toggle ? {\n          textContent\n        } : {\n          titleContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else if (props.contentType === \"image\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageCardContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"cardImage\",\n        src: props.image,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  } else if (props.contentType === \"linkage\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linkCardContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"linkCardGrid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"iconImage\",\n            src: props.githubIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"iconImage\",\n            src: props.linkedinIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"iconImage\",\n            src: props.resumeIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem linkText\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: \"**aharper8484@gmail.com**\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem linkText\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: \"**07980686594**\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkCardItem linkText\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: \"**Website Link**\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Card, \"KMOoc8w16Lq5ZnA3xKzfamBycFo=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["ReactMarkdown","useState","jsxDEV","_jsxDEV","Card","props","_s","titleContent","title","textContent","toggle","setToggle","contentType","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","githubIcon","linkedinIcon","resumeIcon","_c","$RefreshReg$"],"sources":["/Users/adamharper/Documents/GitHub/portfolio/src/components/Card.js"],"sourcesContent":["import { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport { useState } from \"react\";\n\nfunction Card(props) {\n  const titleContent = `# ` + props.title;\n  const textContent = `markdown content will go here`;\n  // const [mdContent, setMdContent] = useState(titleContent);\n  const [toggle, setToggle] = useState(false);\n\n  //   const handleClick = (e) => {\n  //     e.preventDefault();\n  //     setToggle(!false);\n  //     displayContent();\n  //   };\n\n  // const displayContent = (toggle) => {\n  //   if (toggle === false) {\n  //     setMdContent(textContent);\n  //     setToggle(toggle);\n  //   } else {\n  //     setMdContent(titleContent);\n  //     setToggle(!toggle);\n  //   }\n  // };\n\n  if (props.contentType === \"text\") {\n    return (\n      <div\n        className=\"textCardContainer cardTitle cardHidden\"\n        onClick={() => setToggle(!toggle)}\n      >\n        {\n          // eslint-disable-next-line\n        }\n        <ReactMarkdown children={toggle ? { textContent } : { titleContent }} />\n      </div>\n    );\n  } else if (props.contentType === \"image\") {\n    return (\n      <div className=\"imageCardContainer\">\n        <img className=\"cardImage\" src={props.image} alt=\"Profile\" />\n      </div>\n    );\n  } else if (props.contentType === \"linkage\") {\n    return (\n      <div className=\"linkCardContainer\">\n        <div className=\"linkCardGrid\">\n          <div className=\"linkCardItem\">\n            <img className=\"iconImage\" src={props.githubIcon} alt=\"\"></img>\n          </div>\n          <div className=\"linkCardItem\">\n            <img className=\"iconImage\" src={props.linkedinIcon} alt=\"\"></img>\n          </div>\n          <div className=\"linkCardItem\">\n            <img className=\"iconImage\" src={props.resumeIcon} alt=\"\"></img>\n          </div>\n          <div className=\"linkCardItem linkText\">\n            <ReactMarkdown>**aharper8484@gmail.com**</ReactMarkdown>\n          </div>\n          <div className=\"linkCardItem linkText\">\n            <ReactMarkdown>**07980686594**</ReactMarkdown>\n          </div>\n          <div className=\"linkCardItem linkText\">\n            <ReactMarkdown>**Website Link**</ReactMarkdown>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}